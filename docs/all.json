{"shell":true,"revision":"2f366da6027af1ed96730d857f7184f6e2a05e9e","objects":[{"type":null,"source":"lib/extatic.ex:2","object_type":"ModuleObject","moduledoc":"Extatic is a a static site generator that transform a collection of plain text\nfiles into a a website. This is very much a hobby project for my own personal\nblog.\n\nCurrently, the only part that's implemented is `Extatic.Exdown`.\n","module":"Elixir.Extatic","id":"Extatic"},{"type":null,"source":"lib/extatic/exdown.ex:2","object_type":"ModuleObject","moduledoc":"Exdown is a custom plain text markup format, much like Markdown and AsciiDoc,\nthat allows you to write human-friendly plain text and transform it into HTML.\n\n## Outputs\n\nCurrently only HTML output is implemented, but the parsing and formatting\nsteps are decoupled so it should be easy enough to implement your own custom\nformatter using `Extatic.Exdown.Parser.parse/1`.\n\n## Example document\n\nA simple document looks much like Markdown:\n\n    Hello, world! We're _excited_ to see you!\n\nTransforming it gives us:\n\n    iex> Exdown.to_html(\"Hello, world! We're _excited_ to see you!\\n\")\n    \"<p>Hello, world! We're <i>excited</i> to see you!</p>\\n\"\n\nHere's a more elaborate example:\n\n    ::: Elm: nudging you toward good design\n    Arjan van der Gaag <arjan@arjanvandergaag.nl>, 2016-05-30 12:00\n    :tags: programming, elm\n\n    .leader:\n    Elm is a functional programming language that compiles to javascript.\n\n\n    The best of functional programming in your browser\n    --------------------------------------------------\n\n    [[Elm]] promises to deliver fast, virtual DOM-based HTML apps with no\n    runtime exceptions.\n\n\n    [Elm]: http://elm-lang.org\n\nThis example includes an explicit title with author information, front matter,\nsubheadings, links and a paragraph with a custom class name of `leader`.\n\n","module":"Elixir.Extatic.Exdown","id":"Extatic.Exdown"},{"type":null,"source":"lib/extatic/exdown/html_formatter.ex:2","object_type":"ModuleObject","moduledoc":"Transform parsed Exdown documents into an HTML file.\n","module":"Elixir.Extatic.Exdown.HtmlFormatter","id":"Extatic.Exdown.HtmlFormatter"},{"type":null,"source":"lib/extatic/exdown/parser.ex:2","object_type":"ModuleObject","moduledoc":"Take a source Exdown file and parse it into an Elixir data structure.  To\ntransform that structure into an HTML file, see\n`Extatic.Exdown.HtmlFormatter`.\n","module":"Elixir.Extatic.Exdown.Parser","id":"Extatic.Exdown.Parser"},{"type":"def","source":"lib/extatic/exdown.ex:49","signature":[["source",[],null]],"object_type":"FunctionObject","name":"to_html","module_id":"Extatic.Exdown","id":"to_html/1","doc":"Transform an Exdown source file in plain text and transform it into\nHTML output.\n\n### Examples\n\n    iex> Exdown.to_html(\"Hello, world!\\n\")\n    \"<p>Hello, world!</p>\\n\"\n\n","arity":1},{"type":"def","source":"lib/extatic/exdown/html_formatter.ex:6","signature":[["arg",[],"Elixir"]],"object_type":"FunctionObject","name":"format","module_id":"Extatic.Exdown.HtmlFormatter","id":"format/1","doc":"Transform a parsed Exdown document into an HTML fragment or\nentire page.\n\n### Examples\n\n    iex> HtmlFormatter.format({[{:p, [\"Hello, world\"], []}], []})\n    {:ok, \"<p>Hello, world</p>\\n\"}\n\n","arity":1},{"type":"def","source":"lib/extatic/exdown/parser.ex:10","signature":[["source",[],null]],"object_type":"FunctionObject","name":"parse","module_id":"Extatic.Exdown.Parser","id":"parse/1","doc":"Parse plain text in Exdown format into an Elixir data structure.\n\n### Examples\n\n    iex> Parser.parse(\"Hello, world\\n\")\n    {:ok, {[{:p, [\"Hello, world\"], []}], []}}\n\n","arity":1}],"language":"elixir","git_repo_url":"https://github.com/avdgaag/extatic.git","client_version":"0.5.6","client_name":"inch_ex","branch_name":"master","args":[]}